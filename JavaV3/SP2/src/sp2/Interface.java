/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sp2;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;





/**
 *
 * @author julien.leleu
 */
public class Interface extends javax.swing.JDialog {
    
    ResultSet re;
    String[] resuTab;
    
    
    
    /**
     * Creates new form Interface
     */
    public Interface(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        charge = new javax.swing.JButton();
        quit = new javax.swing.JButton();
        verif = new javax.swing.JLabel();
        listProd = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        cheminXML = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        listCom = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        IP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        User = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Mdp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Application.");

        jLabel1.setText("Sélection du producteur :");

        charge.setText("Charger les données et créer le XML");
        charge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chargeMouseClicked(evt);
            }
        });

        quit.setText("Quitter");
        quit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitMouseClicked(evt);
            }
        });

        verif.setBackground(new java.awt.Color(255, 255, 255));
        verif.setText("Vide");

        listProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Charger les producteurs");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cheminXML.setText("D:\\aa\\");
            cheminXML.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cheminXMLActionPerformed(evt);
                }
            });

            jLabel2.setText("       Chemin de destination :");

            jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            jLabel3.setText("Création fichier XML et PDF");

            jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            jLabel4.setText("Envoie des commandes");

            jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

            jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

            jButton2.setText("Charger les commandes");
            jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton2MouseClicked(evt);
                }
            });

            jLabel6.setText("Sélection de la commande :");

            listCom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
            listCom.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    listComActionPerformed(evt);
                }
            });

            jButton3.setText("Envoyer");
            jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButton3MouseClicked(evt);
                }
            });

            jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            jLabel5.setText("XML");

            jLabel8.setText("Réponse :");

            jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

            jLabel7.setText("IP du serveur :");

            IP.setText("169.254.193.195");

            jLabel9.setText("Utilisateur :");

            User.setText("root");

            jLabel10.setText("Mot de passe :");

            Mdp.setText("root");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator4)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cheminXML, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(charge)
                    .addGap(385, 385, 385))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(verif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(121, 121, 121)
                            .addComponent(quit))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(listCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton3)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jSeparator3)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(jSeparator2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(listProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel3)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addContainerGap())))
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(60, 60, 60)
                    .addComponent(jLabel9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(29, 29, 29)
                    .addComponent(jLabel10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(Mdp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(Mdp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(listProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(charge)
                        .addComponent(cheminXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel4)
                    .addGap(32, 32, 32)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(listCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addGap(57, 57, 57)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(quit))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(verif, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void quitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitMouseClicked
        //quitter l'application
        System.exit(0);
    }//GEN-LAST:event_quitMouseClicked

    private void chargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chargeMouseClicked
        String cde;
        
        cde=listProd.getSelectedItem().toString();
        
        String str[] = cde.split(" / ");
        cde=str[0];
        if(cde != ""){
                        
            try{                
                //on execute une requete SELECT
                re = execReq(1, "SELECT com.IdCommande, cli.IdClient, cli.NomClient, pro.NomSociete, pro.IdProducteur, ver.NomVerger, con.Quantite,typ.Libelle, typ.Poids FROM client cli, commande com, lot , livraison liv, verger ver, producteur pro, conditionner con, typeconditionnement typ \n" +
"WHERE cli.IdClient=com.IdClient\n" +
"AND con.IdCommande=com.IdCommande\n" +
"AND typ.IdConditionnement=con.IdConditionnement\n" +
"AND com.IdLot=lot.IdLot\n" +
"AND lot.IdLivraison=liv.IdLivraison\n" +
"AND liv.IdVerger=ver.IdVerger\n" +
"AND ver.IdProducteur=pro.IdProducteur\n" +
"AND pro.IdProducteur='"+ cde +"'"+
"ORDER BY com.IdCommande"       );     
                
                //comme ca on stocke le resultat NON ouvert
               
                //on compte le nombre de ligne 
                if(!re.first()){
                    verif.setText("<html><b>Statut :</b><br> Client non trouvé <br> OU <br> aucune commande en cours</html>");
                    
                }
                else{
                    verif.setText("<html><b>Statut :</b><br> Données chargées</html>");
                    
                    String numCommande="";
                    int prems=0;
                    
                    Fichier XML = new Fichier();
                    XML.ouvrir(cheminXML.getText()+cde+"-"+str[1]+".xml", "W");
                    XML.ecrire("<?xml version=\"1.0\"?>\n");
                    do{
                        //si je suis sur la meme commande j'ecris que le conditionnement
                        if(numCommande.equals(re.getString(1))){
                            XML.ecrire("<detail>\n");
                            XML.ecrire("    <Quantite>"+re.getString(7)+"</Quantite>\n");
                            XML.ecrire("    <Libelle>"+re.getString(8)+"</Libelle>\n");
                            XML.ecrire("    <Poids>"+re.getString(9)+"</Poids>\n");
                            XML.ecrire("</detail>\n");
                            
                        }
                        //sinon j'ecrit une nouvelle commande et le detail du premier conditionnement
                        else{
                            
                            numCommande=re.getString(1);
                            if(prems==1){
                                XML.ecrire("</commande>\n");
                                
                            }
                            prems=1;
                            //nouvelle commande donc on detail la provenance
                            XML.ecrire("<commande>\n");
                            XML.ecrire("<IdCommande>"+re.getString(1)+"</IdCommande>\n");
                            XML.ecrire("<IdClient>"+re.getString(2)+"</IdClient>\n");
                            XML.ecrire("<NomClient>"+re.getString(3)+"</NomClient>\n");
                            XML.ecrire("<IdProd>"+re.getString(5)+"</IdProd>\n");
                            XML.ecrire("<SocieteProd>"+re.getString(4)+"</SocieteProd>\n");
                            XML.ecrire("<NomVerger>"+re.getString(6)+"</NomVerger>\n");
                            //detail de la commande
                            XML.ecrire("<detail>\n");
                            XML.ecrire("    <Quantite>"+re.getString(7)+"</Quantite>\n");
                            XML.ecrire("    <Libelle>"+re.getString(8)+"</Libelle>\n");
                            XML.ecrire("    <Poids>"+re.getString(9)+"</Poids>\n");
                            XML.ecrire("</detail>\n");
                            
                        }
                         
                    }while(re.next());
                    XML.ecrire("</commande>\n");
                    XML.fermer();
                    
                    
                }
            }
            catch(Exception e){
                verif.setText("<html>Statut : Erreur" + e.getMessage()+"</html>");
                
            }
            
        }
        
        
        
    }//GEN-LAST:event_chargeMouseClicked

    
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        listProd.removeAllItems();
        try{
            ResultSet resuProd = execReq(1,"SELECT * FROM producteur");
            while(resuProd.next())
                listProd.addItem(resuProd.getString(1) + " / " + resuProd.getString(2));
            }
            catch(Exception e){
                verif.setText("<html>Statut : Erreur " + e.getMessage()+"</html>");
                System.out.println(e.getMessage());
            }

    }//GEN-LAST:event_jButton1MouseClicked

    private void cheminXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheminXMLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheminXMLActionPerformed

    
    private void majListeCommande(){
        //fonction afin de charger les commandes dans la liste déroulante
        
        listCom.removeAllItems();
        try{
            ResultSet resuCom = execReq(1, "SELECT Co.IdCommande, Cl.NomClient FROM commande Co, client Cl WHERE Co.DateEnvoie LIKE \"0000-00-00 00:00:00\" AND Cl.IdClient=Co.IdClient" );
            while(resuCom.next())
                listCom.addItem(resuCom.getString(1) + " / " + resuCom.getString(2));
            }
            catch(Exception e){
                verif.setText("<html>Statut : Erreur" + e.getMessage()+"</html>");
                
            }
    }
    
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        //on charge la liste des commandes
        majListeCommande();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        String cde;
        
        cde=listCom.getSelectedItem().toString();
        
        String str[] = cde.split(" / ");
        cde=str[0];
        
        if(cde != ""){
            try{

                execReq(2,"UPDATE commande SET DateEnvoie=NOW() WHERE IdCommande="+cde );
                verif.setText("Commande envoyée");

                //on recharge la liste des commandes
                majListeCommande();


                }
                catch(Exception e){
                    verif.setText("<html>Statut : Erreur" + e.getMessage()+"</html>");

                }
        }
        else{
            verif.setText("Merci de selectionner une commande afin de l'envoyer");
        }
        
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void choixCommandeEditer(){
        //fonction afin de charger les commandes dans la liste déroulante
        
        listCom.removeAllItems();
        try{
            ResultSet resuCom = execReq(1, "SELECT Co.IdCommande, Cl.NomClient FROM commande Co, client Cl WHERE Co.DateEnvoie NOT LIKE \"0000-00-00 00:00:00\" AND Cl.IdClient=Co.IdClient" );
            while(resuCom.next())
                listCom.addItem(resuCom.getString(1) + " / " + resuCom.getString(2));
            }
            catch(Exception e){
                verif.setText("<html>Statut : Erreur" + e.getMessage()+"</html>");
                
            }
    }
    
    
    
    
    private void listComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listComActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listComActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    //on defini les informations de connexion ici, comme ca pas besoin de copier collé lus haut !!!!!
    private String creerChaineConnexion(){
        return "jdbc:mysql://"+ IP.getText() +"/etudecas";
    }
    private String creerUserConnexion(){
        return User.getText();
    }
    private String creerMdpConnexion(){
        return Mdp.getText();
    }
    
    
    /*
    execute une requete SQL passé en parametre 1
    Si requete SELECT le parametre 2 doit etre 1
    Si requete UPDATE le parametre 2 doit etre 2
    */
    private ResultSet execReq(int type, String rqSQL) throws ClassNotFoundException, SQLException{
        ResultSet resu = null;
        //on crée une connexion
        Connection con;

        //la voila on charge le driver
        Class.forName("org.gjt.mm.mysql.Driver");

        //on charge la connexion
        con = DriverManager.getConnection(creerChaineConnexion(),creerUserConnexion(),creerMdpConnexion());

        //on cree ce qu'on doit faire sur l'objet que l'on doit faire.... tres philosophique je sais
        Statement statement = con.createStatement();

        if(type == 1){
            //on execute une requete SELECT
            resu = statement.executeQuery(rqSQL);  
        }
        else if(type == 2){
            statement.executeUpdate (rqSQL);
        }
        return resu;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Interface dialog = new Interface(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IP;
    private javax.swing.JTextField Mdp;
    private javax.swing.JTextField User;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton charge;
    private javax.swing.JTextField cheminXML;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JComboBox listCom;
    private javax.swing.JComboBox<String> listProd;
    private javax.swing.JButton quit;
    private javax.swing.JLabel verif;
    // End of variables declaration//GEN-END:variables
}
